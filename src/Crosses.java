import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.io.*;

public class Crosses extends JFrame {
    public JButton button1;
    public JButton button2;
    public JButton button3;
    public JButton button4;
    public JButton button5;
    public JButton button6;
    public JButton button7;
    public JButton button8;
    public JButton button9;
    public JPanel panel1;
    public JLabel label1;

    public Crosses() {

        setContentPane(panel1);
        setVisible(true);
        ActionListener listener1 = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    Client.bos.writeObject(1);
                    Client.bos.flush();
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
            }
        };
        ActionListener listener2 = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    Client.bos.writeObject(2);
                    Client.bos.flush();
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
            }
        };
        ActionListener listener3 = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    Client.bos.writeObject(3);
                    Client.bos.flush();
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
            }
        };
        ActionListener listener4 = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    Client.bos.writeObject(4);
                    Client.bos.flush();
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
            }
        };
        ActionListener listener5 = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    Client.bos.writeObject(5);
                    Client.bos.flush();
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
            }
        };
        ActionListener listener6 = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    Client.bos.writeObject(6);
                    Client.bos.flush();
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
            }
        };
        ActionListener listener7 = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    Client.bos.writeObject(7);
                    Client.bos.flush();
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
            }
        };
        ActionListener listener8 = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    Client.bos.writeObject(8);
                    Client.bos.flush();
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
            }
        };
        ActionListener listener9 = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    Client.bos.writeObject(9);
                    Client.bos.flush();
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
            }
        };

        button1.addActionListener(listener1);
        button2.addActionListener(listener2);
        button3.addActionListener(listener3);
        button4.addActionListener(listener4);
        button5.addActionListener(listener5);
        button6.addActionListener(listener6);
        button7.addActionListener(listener7);
        button8.addActionListener(listener8);
        button9.addActionListener(listener9);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(4, 3, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setInheritsPopupMenu(true);
        panel1.setMinimumSize(new Dimension(300, 300));
        panel1.setName("asd");
        panel1.setPreferredSize(new Dimension(300, 300));
        panel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        button1 = new JButton();
        button1.setText("");
        panel1.add(button1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(70, 70), new Dimension(70, 70), 0, false));
        button2 = new JButton();
        button2.setText("");
        panel1.add(button2, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(70, 70), new Dimension(70, 70), 0, false));
        button3 = new JButton();
        button3.setText("");
        panel1.add(button3, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(70, 70), new Dimension(70, 70), 0, false));
        button4 = new JButton();
        button4.setText("");
        panel1.add(button4, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(70, 70), new Dimension(70, 70), 0, false));
        button5 = new JButton();
        button5.setText("");
        panel1.add(button5, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(70, 70), new Dimension(70, 70), 0, false));
        button6 = new JButton();
        button6.setText("");
        panel1.add(button6, new com.intellij.uiDesigner.core.GridConstraints(2, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(70, 70), new Dimension(70, 70), 0, false));
        button7 = new JButton();
        button7.setText("");
        panel1.add(button7, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(70, 70), new Dimension(70, 70), 0, false));
        button8 = new JButton();
        button8.setText("");
        panel1.add(button8, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(70, 70), new Dimension(70, 70), 0, false));
        button9 = new JButton();
        button9.setText("");
        panel1.add(button9, new com.intellij.uiDesigner.core.GridConstraints(3, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(70, 70), new Dimension(70, 70), 0, false));
        label1 = new JLabel();
        label1.setEnabled(true);
        label1.setHorizontalAlignment(0);
        label1.setHorizontalTextPosition(0);
        label1.setText("Label");
        label1.setVerticalAlignment(0);
        panel1.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
